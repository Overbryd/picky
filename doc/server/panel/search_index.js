var search_data = {"index":{"searchIndex":["application","helpers","measuring","index","base","memory","redis","indexers","base","parallel","serial","solr","interfaces","liveparameters","couldnotupdateconfigurationerror","adapters","rack","base","liveparameters","query","frontendadapters","index","backend","file","basic","json","marshal","text","files","redis","basic","listhash","stringhash","query","indexes","shared","category","nosourcespecifiedexception","array","harakiri","results","search","differenttypeserror","sources","base","csv","couch","db","delicious","nocsvfilegiven","nocouchdbgiven","allocation_for()","allocations_ary_for()","allocations_for()","app_for()","backup()","backup()","backup()","backup_directory()","backup_file_path_of()","boost()","cache_ok?()","cache_ok?()","cache_small?()","cache_small?()","call()","call()","category()","category_name()","check_external_interface()","check_name()","check_options()","check_source()","chunksize()","close_child()","collection()","collection()","combinations_type_for()","connect_backend()","connect_backend()","count()","define_category()","define_indexing()","define_ranged_category()","define_source()","delete()","delete()","delete()","dump()","dump()","dump()","dump()","dump()","dump_configuration()","dump_index()","dump_similarity()","dump_weights()","duration()","execute()","expand_combinations_from()","extension()","extension()","extension()","extension()","extract_configuration()","extracted()","flush()","from()","harakiri()","harakiri()","harakiri?()","harvest()","harvest()","harvest()","harvest()","harvest_statement()","harvest_statement_with_offset()","hashed()","identifier()","ids()","ids()","index()","index()","index_cache_ok?()","index_cache_small?()","index_directory()","index_name()","index_path()","indexing()","indexing()","indexing_message()","indexing_message()","internal_indexed()","internal_indexing()","key_format()","kill_each_worker_except()","kill_worker()","load()","load()","load()","load()","load_configuration()","load_index()","load_similarity()","load_weights()","log_type()","member()","member()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","open_for_indexing()","parameters()","prepare!()","prepare_backup()","prepare_index_directory()","prepared_allocations_for()","prepared_index_file()","prepared_index_path()","process()","process()","querying_removes_characters()","querying_removes_characters=()","querying_splits_text_on()","querying_splits_text_on=()","querying_stopwords()","querying_stopwords=()","raise_different()","ranged_category()","remove_worker()","respond_with()","restore()","restore()","retrieve()","retrieve()","retrieve()","retrieve()","retrieve()","search()","search_with_text()","searching()","searching()","serialize()","setting()","similarity_cache_ok?()","similarity_cache_small?()","size()","size_of()","snapshot_table_name()","source()","start_master_process_thread()","take_snapshot()","take_snapshot()","timed()","to_app()","to_app()","to_json()","to_log()","to_response()","to_routes()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_stats()","to_stats()","tokenized()","tokenizer()","tokenizer()","total()","try_updating_configuration_with()","weight()","weights_cache_ok?()","weights_cache_small?()","worker_pids()","write_parent()","bundling.rb","constants.rb","deployment.rb","picky-tasks.rb","picky.rb","aliases.rb","analyzer.rb","application.rb","west_european.rb","cores.rb","aliases.rb","base.rb","memory.rb","redis.rb","index_bundle.rb","indexes.rb","indexes.rb","live_parameters.rb","internals.rb","rack.rb","base.rb","live_parameters.rb","query.rb","location.rb","maybe_compile.rb","makefile","extconf.rb","mkmf.log","performant.c","array.rb","hash.rb","module.rb","object.rb","symbol.rb","rack.rb","base.rb","default.rb","none.rb","strategy.rb","substring.rb","partial_generator.rb","default.rb","double_metaphone.rb","metaphone.rb","none.rb","phonetic.rb","soundex.rb","strategy.rb","similarity_generator.rb","strategy.rb","default.rb","logarithmic.rb","strategy.rb","weights_generator.rb","measuring.rb","backend.rb","basic.rb","json.rb","marshal.rb","text.rb","files.rb","redis.rb","basic.rb","list_hash.rb","string_hash.rb","base.rb","memory.rb","redis.rb","categories.rb","category.rb","index.rb","calculation.rb","location.rb","wrapper.rb","location.rb","exact_first.rb","base.rb","parallel.rb","serial.rb","solr.rb","base.rb","memory.rb","redis.rb","super_base.rb","category.rb","index.rb","location.rb","performant.rb","allocation.rb","allocations.rb","combination.rb","base.rb","memory.rb","redis.rb","indexes.rb","qualifiers.rb","token.rb","tokens.rb","weights.rb","category.rb","sunspot-solr.pid","schema_generator.rb","base.rb","index.rb","location.rb","query.rb","loader.rb","search.rb","no_source_specified_exception.rb","query.rb","solr.rb","harakiri.rb","results.rb","search.rb","signals.rb","base.rb","couch.rb","csv.rb","db.rb","delicious.rb","base.rb","location.rb","statistics.rb","application.rake","checks.rake","framework.rake","index.rake","routes.rake","search.rake","server.rake","shortcuts.rake","solr.rake","spec.rake","statistics.rake","todo.rake","try.rake"],"longSearchIndex":["lib/picky/application.rb","lib/picky/internals/helpers/measuring.rb","helpers","lib/picky/index/redis.rb","index","index","index","lib/picky/internals/indexers/solr.rb","indexers","indexers","indexers","indexers","lib/picky/interfaces/live_parameters.rb","interfaces","interfaces::liveparameters","internals","internals::adapters","internals::adapters::rack","internals::adapters::rack","internals::adapters::rack","internals","internals","internals::index","internals::index","internals::index::file","internals::index::file","internals::index::file","internals::index::file","internals::index","internals::index","internals::index::redis","internals::index::redis","internals::index::redis","internals","internals::query","internals","internals::shared","lib/picky/no_source_specified_exception.rb","performant","rack","lib/picky/results.rb","lib/picky/search.rb","search","lib/picky/sources/wrappers/location.rb","sources","sources","sources","sources","sources","sources","sources","internals::query::indexes","internals::query::indexes","internals::query::indexes","internals::adapters::rack","internals::index::backend","internals::index::file::basic","internals::index::redis::basic","internals::index::file::basic","internals::index::file::basic","search","internals::index::file::basic","internals::index::redis::basic","internals::index::file::basic","internals::index::redis::basic","application","rack::harakiri","index::base","internals::shared::category","application","index::base","index::base","index::base","sources::db","interfaces::liveparameters","internals::index::redis::listhash","internals::index::redis::stringhash","search","sources::base","sources::db","sources::db","index::base","index::base","index::base","index::base","internals::index::backend","internals::index::file::basic","internals::index::redis::basic","internals::index::file::json","internals::index::file::marshal","internals::index::file::text","internals::index::redis::listhash","internals::index::redis::stringhash","internals::index::backend","internals::index::backend","internals::index::backend","internals::index::backend","results","search","internals::query::indexes","internals::index::file::basic","internals::index::file::json","internals::index::file::marshal","internals::index::file::text","interfaces::liveparameters","internals::adapters::rack::query","indexers::parallel","results","interfaces::liveparameters","rack::harakiri","rack::harakiri","sources::csv","sources::couch","sources::db","sources::delicious","sources::db","sources::db","indexers::solr","internals::shared::category","internals::index::redis","results","indexers::base","indexers::solr","internals::index::backend","internals::index::backend","internals::shared::category","internals::shared::category","internals::shared::category","application","index::base","indexers::parallel","indexers::serial","index::base","index::base","indexers::base","interfaces::liveparameters","interfaces::liveparameters","internals::index::file::json","internals::index::file::marshal","internals::index::file::text","internals::index::redis::basic","internals::index::backend","internals::index::backend","internals::index::backend","internals::index::backend","results","internals::index::redis::listhash","internals::index::redis::stringhash","index::base","index::memory","index::redis","indexers::parallel","indexers::serial","indexers::solr","interfaces::liveparameters","interfaces::liveparameters::couldnotupdateconfigurationerror","internals::adapters::rack::liveparameters","internals::adapters::rack::query","internals::index::backend","internals::index::file::basic","internals::index::files","internals::index::redis","internals::index::redis::basic","internals::query::indexes","rack::harakiri","results","search","search::differenttypeserror","sources::csv","sources::couch","sources::db","sources::delicious","internals::index::file::text","interfaces::liveparameters","results","internals::index::file::basic","internals::shared::category","internals::query::indexes","internals::shared::category","internals::shared::category","indexers::parallel","indexers::serial","interfaces::liveparameters","interfaces::liveparameters","interfaces::liveparameters","interfaces::liveparameters","interfaces::liveparameters","interfaces::liveparameters","search","index::base","interfaces::liveparameters","internals::adapters::rack::base","internals::index::backend","internals::index::file::basic","internals::index::backend","internals::index::file::json","internals::index::file::marshal","internals::index::file::text","internals::index::redis::basic","search","search","application","search","results","internals::index::redis","internals::index::backend","internals::index::backend","internals::index::redis::basic","internals::index::file::basic","sources::db","index::base","interfaces::liveparameters","sources::base","sources::db","helpers::measuring","internals::adapters::rack::liveparameters","internals::adapters::rack::query","results","results","results","application","interfaces::liveparameters","internals::index::file::basic","internals::index::files","internals::shared::category","search","search::differenttypeserror","sources::csv","sources::couch","sources::db","sources::delicious","application","index::base","search","indexers::serial","search","results","interfaces::liveparameters","internals::index::redis","internals::index::backend","internals::index::backend","interfaces::liveparameters","interfaces::liveparameters","files/lib/bundling_rb.html","files/lib/constants_rb.html","files/lib/deployment_rb.html","files/lib/picky-tasks_rb.html","files/lib/picky_rb.html","files/lib/picky/aliases_rb.html","files/lib/picky/analyzer_rb.html","files/lib/picky/application_rb.html","files/lib/picky/character_substituters/west_european_rb.html","files/lib/picky/cores_rb.html","files/lib/picky/generators/aliases_rb.html","files/lib/picky/index/base_rb.html","files/lib/picky/index/memory_rb.html","files/lib/picky/index/redis_rb.html","files/lib/picky/index_bundle_rb.html","files/lib/picky/indexed/indexes_rb.html","files/lib/picky/indexing/indexes_rb.html","files/lib/picky/interfaces/live_parameters_rb.html","files/lib/picky/internals_rb.html","files/lib/picky/internals/adapters/rack_rb.html","files/lib/picky/internals/adapters/rack/base_rb.html","files/lib/picky/internals/adapters/rack/live_parameters_rb.html","files/lib/picky/internals/adapters/rack/query_rb.html","files/lib/picky/internals/calculations/location_rb.html","files/lib/picky/internals/ext/maybe_compile_rb.html","files/lib/picky/internals/ext/ruby19/makefile.html","files/lib/picky/internals/ext/ruby19/extconf_rb.html","files/lib/picky/internals/ext/ruby19/mkmf_log.html","files/lib/picky/internals/ext/ruby19/performant_c.html","files/lib/picky/internals/extensions/array_rb.html","files/lib/picky/internals/extensions/hash_rb.html","files/lib/picky/internals/extensions/module_rb.html","files/lib/picky/internals/extensions/object_rb.html","files/lib/picky/internals/extensions/symbol_rb.html","files/lib/picky/internals/frontend_adapters/rack_rb.html","files/lib/picky/internals/generators/base_rb.html","files/lib/picky/internals/generators/partial/default_rb.html","files/lib/picky/internals/generators/partial/none_rb.html","files/lib/picky/internals/generators/partial/strategy_rb.html","files/lib/picky/internals/generators/partial/substring_rb.html","files/lib/picky/internals/generators/partial_generator_rb.html","files/lib/picky/internals/generators/similarity/default_rb.html","files/lib/picky/internals/generators/similarity/double_metaphone_rb.html","files/lib/picky/internals/generators/similarity/metaphone_rb.html","files/lib/picky/internals/generators/similarity/none_rb.html","files/lib/picky/internals/generators/similarity/phonetic_rb.html","files/lib/picky/internals/generators/similarity/soundex_rb.html","files/lib/picky/internals/generators/similarity/strategy_rb.html","files/lib/picky/internals/generators/similarity_generator_rb.html","files/lib/picky/internals/generators/strategy_rb.html","files/lib/picky/internals/generators/weights/default_rb.html","files/lib/picky/internals/generators/weights/logarithmic_rb.html","files/lib/picky/internals/generators/weights/strategy_rb.html","files/lib/picky/internals/generators/weights_generator_rb.html","files/lib/picky/internals/helpers/measuring_rb.html","files/lib/picky/internals/index/backend_rb.html","files/lib/picky/internals/index/file/basic_rb.html","files/lib/picky/internals/index/file/json_rb.html","files/lib/picky/internals/index/file/marshal_rb.html","files/lib/picky/internals/index/file/text_rb.html","files/lib/picky/internals/index/files_rb.html","files/lib/picky/internals/index/redis_rb.html","files/lib/picky/internals/index/redis/basic_rb.html","files/lib/picky/internals/index/redis/list_hash_rb.html","files/lib/picky/internals/index/redis/string_hash_rb.html","files/lib/picky/internals/indexed/bundle/base_rb.html","files/lib/picky/internals/indexed/bundle/memory_rb.html","files/lib/picky/internals/indexed/bundle/redis_rb.html","files/lib/picky/internals/indexed/categories_rb.html","files/lib/picky/internals/indexed/category_rb.html","files/lib/picky/internals/indexed/index_rb.html","files/lib/picky/internals/indexed/wrappers/bundle/calculation_rb.html","files/lib/picky/internals/indexed/wrappers/bundle/location_rb.html","files/lib/picky/internals/indexed/wrappers/bundle/wrapper_rb.html","files/lib/picky/internals/indexed/wrappers/category/location_rb.html","files/lib/picky/internals/indexed/wrappers/exact_first_rb.html","files/lib/picky/internals/indexers/base_rb.html","files/lib/picky/internals/indexers/parallel_rb.html","files/lib/picky/internals/indexers/serial_rb.html","files/lib/picky/internals/indexers/solr_rb.html","files/lib/picky/internals/indexing/bundle/base_rb.html","files/lib/picky/internals/indexing/bundle/memory_rb.html","files/lib/picky/internals/indexing/bundle/redis_rb.html","files/lib/picky/internals/indexing/bundle/super_base_rb.html","files/lib/picky/internals/indexing/category_rb.html","files/lib/picky/internals/indexing/index_rb.html","files/lib/picky/internals/indexing/wrappers/category/location_rb.html","files/lib/picky/internals/performant_rb.html","files/lib/picky/internals/query/allocation_rb.html","files/lib/picky/internals/query/allocations_rb.html","files/lib/picky/internals/query/combination_rb.html","files/lib/picky/internals/query/combinations/base_rb.html","files/lib/picky/internals/query/combinations/memory_rb.html","files/lib/picky/internals/query/combinations/redis_rb.html","files/lib/picky/internals/query/indexes_rb.html","files/lib/picky/internals/query/qualifiers_rb.html","files/lib/picky/internals/query/token_rb.html","files/lib/picky/internals/query/tokens_rb.html","files/lib/picky/internals/query/weights_rb.html","files/lib/picky/internals/shared/category_rb.html","files/lib/picky/internals/solr/pids/sunspot-solr_pid.html","files/lib/picky/internals/solr/schema_generator_rb.html","files/lib/picky/internals/tokenizers/base_rb.html","files/lib/picky/internals/tokenizers/index_rb.html","files/lib/picky/internals/tokenizers/location_rb.html","files/lib/picky/internals/tokenizers/query_rb.html","files/lib/picky/loader_rb.html","files/lib/picky/loggers/search_rb.html","files/lib/picky/no_source_specified_exception_rb.html","files/lib/picky/query_rb.html","files/lib/picky/query/solr_rb.html","files/lib/picky/rack/harakiri_rb.html","files/lib/picky/results_rb.html","files/lib/picky/search_rb.html","files/lib/picky/signals_rb.html","files/lib/picky/sources/base_rb.html","files/lib/picky/sources/couch_rb.html","files/lib/picky/sources/csv_rb.html","files/lib/picky/sources/db_rb.html","files/lib/picky/sources/delicious_rb.html","files/lib/picky/sources/wrappers/base_rb.html","files/lib/picky/sources/wrappers/location_rb.html","files/lib/picky/statistics_rb.html","files/lib/tasks/application_rake.html","files/lib/tasks/checks_rake.html","files/lib/tasks/framework_rake.html","files/lib/tasks/index_rake.html","files/lib/tasks/routes_rake.html","files/lib/tasks/search_rake.html","files/lib/tasks/server_rake.html","files/lib/tasks/shortcuts_rake.html","files/lib/tasks/solr_rake.html","files/lib/tasks/spec_rake.html","files/lib/tasks/statistics_rake.html","files/lib/tasks/todo_rake.html","files/lib/tasks/try_rake.html"],"info":[["Application","lib/picky/application.rb","classes/Application.html"," < Object","= Picky Applications A Picky Application is where you configure the whole search engine. This is a step-by-step",1],["Helpers","lib/picky/internals/helpers/measuring.rb","classes/Helpers.html"," < ","Helper methods for measuring, benchmarking, logging. ",1],["Measuring","Helpers","classes/Helpers/Measuring.html"," < ","",1],["Index","lib/picky/index/base.rb","classes/Index.html"," < ","",1],["Base","Index","classes/Index/Base.html"," < Object","This class defines the indexing and index API that is exposed to the user as the #index method inside",1],["Memory","Index","classes/Index/Memory.html"," < Base","An index that is persisted in files, loaded at startup and kept in memory at runtime. ",1],["Redis","Index","classes/Index/Redis.html"," < Base","An index that is persisted in Redis. ",1],["Indexers","lib/picky/internals/indexers/base.rb","classes/Indexers.html"," < ","encoding: utf-8 --- encoding: utf-8 --- encoding: utf-8 ",1],["Base","Indexers","classes/Indexers/Base.html"," < Object","",1],["Parallel","Indexers","classes/Indexers/Parallel.html"," < Base","Uses a number of categories, a source, and a tokenizer to index data. The tokenizer is taken from each",1],["Serial","Indexers","classes/Indexers/Serial.html"," < Base","Uses a category to index its data. Note: It is called serial since it indexes each ",1],["Solr","Indexers","classes/Indexers/Solr.html"," < Object","Deprecated. Only here as an example. ",1],["Interfaces","lib/picky/interfaces/live_parameters.rb","classes/Interfaces.html"," < ","This is very optional. Only load if the user wants it. ",1],["LiveParameters","Interfaces","classes/Interfaces/LiveParameters.html"," < Object","This is an interface that provides the user of Picky with the possibility to change parameters while",1],["CouldNotUpdateConfigurationError","Interfaces::LiveParameters","classes/Interfaces/LiveParameters/CouldNotUpdateConfigurationError.html"," < StandardError","",1],["Adapters","Internals","classes/Internals/Adapters.html"," < ","",1],["Rack","Internals::Adapters","classes/Internals/Adapters/Rack.html"," < ","Adapter that is plugged into a Rack outlet. --- --- This is an adapter that is plugged into a Rack outlet.",1],["Base","Internals::Adapters::Rack","classes/Internals/Adapters/Rack/Base.html"," < Object","Subclasses of this class should respond to * to_app(options) ",1],["LiveParameters","Internals::Adapters::Rack","classes/Internals/Adapters/Rack/LiveParameters.html"," < Base","",1],["Query","Internals::Adapters::Rack","classes/Internals/Adapters/Rack/Query.html"," < Base","",1],["FrontendAdapters","Internals","classes/Internals/FrontendAdapters.html"," < ","",1],["Index","Internals","classes/Internals/Index.html"," < ","",1],["Backend","Internals::Index","classes/Internals/Index/Backend.html"," < Object","",1],["File","Internals::Index","classes/Internals/Index/File.html"," < ","Handles all aspects of index files, such as dumping/loading. ",1],["Basic","Internals::Index::File","classes/Internals/Index/File/Basic.html"," < Object","Base class for all index files. Provides necessary helper methods for its subclasses. Not directly useable,",1],["JSON","Internals::Index::File","classes/Internals/Index/File/JSON.html"," < Basic","Index files dumped in the JSON format. ",1],["Marshal","Internals::Index::File","classes/Internals/Index/File/Marshal.html"," < Basic","Index data in the Ruby Marshal format. ",1],["Text","Internals::Index::File","classes/Internals/Index/File/Text.html"," < Basic","Index data dumped in the text format. ",1],["Files","Internals::Index","classes/Internals/Index/Files.html"," < Backend","",1],["Redis","Internals::Index","classes/Internals/Index/Redis.html"," < Backend","TODO Needs a reconnect to be run after forking. ",1],["Basic","Internals::Index::Redis","classes/Internals/Index/Redis/Basic.html"," < Object","Redis Backend Accessor. Provides necessary helper methods for its subclasses. Not directly useable, as",1],["ListHash","Internals::Index::Redis","classes/Internals/Index/Redis/ListHash.html"," < Basic","",1],["StringHash","Internals::Index::Redis","classes/Internals/Index/Redis/StringHash.html"," < Basic","",1],["Query","Internals","classes/Internals/Query.html"," < ","--- ",1],["Indexes","Internals::Query","classes/Internals/Query/Indexes.html"," < Object","The query indexes class bundles indexes given to a query. Example: # If you call Search.new dvd_index,",1],["Shared","Internals","classes/Internals/Shared.html"," < ","",1],["Category","Internals::Shared","classes/Internals/Shared/Category.html"," < ","",1],["NoSourceSpecifiedException","lib/picky/no_source_specified_exception.rb","classes/NoSourceSpecifiedException.html"," < StandardError","Raised if no source is available on a category. ",1],["Array","Performant","classes/Performant/Array.html"," < Object","#include \"ruby.h\"  // Copying internal ruby methods. // inline VALUE rb_ary_elt(ary, offset)     VALUE",1],["Harakiri","Rack","classes/Rack/Harakiri.html"," < Object","Simple Rack Middleware to kill Unicorns after X requests. Use as follows in e.g. your rackup File: Rack::Harakiri.after",1],["Results","lib/picky/results.rb","classes/Results.html"," < Object","This is the internal results object. Usually, to_marshal, or to_json is called on it to get a string",1],["Search","lib/picky/search.rb","classes/Search.html"," < Object","= Picky Queries A Picky Search is an object which: * holds one or more indexes * offers an interface",1],["DifferentTypesError","Search","classes/Search/DifferentTypesError.html"," < StandardError","Currently it isn't possible using Memory and Redis etc. indexes in the same query index group. ",1],["Sources","lib/picky/sources/base.rb","classes/Sources.html"," < ","= Data Sources Currently, Picky offers the following Sources: * CSV (comma  or other  separated",1],["Base","Sources","classes/Sources/Base.html"," < Object","Sources are where your data comes from. A source has 1 mandatory and 2 optional methods: * connect_backend",1],["CSV","Sources","classes/Sources/CSV.html"," < Base","Describes a CSV source, a file with comma separated values in it. The first column is implicitly assumed",1],["Couch","Sources","classes/Sources/Couch.html"," < Base","A Couch database source. Options: * url and all the options of a <tt>RestClient::Resource</tt>. See http://github.com/archiloque/rest-client.",1],["DB","Sources","classes/Sources/DB.html"," < Base","Describes a database source. Needs a SELECT statement (with id in it), and a file option or the options",1],["Delicious","Sources","classes/Sources/Delicious.html"," < Base","Describes a Delicious (http://deli.cio.us) source. This source has a fixed set of categories: * title",1],["NoCSVFileGiven","Sources","classes/Sources/NoCSVFileGiven.html"," < StandardError","Raised when a CSV source is instantiated without a file. Example: Sources::CSV.new(:column1, :column2)",1],["NoCouchDBGiven","Sources","classes/Sources/NoCouchDBGiven.html"," < StandardError","Raised when a Couch source is instantiated without a file. Example: Sources::Couch.new(:column1, :column2)",1],["allocation_for","Internals::Query::Indexes","classes/Internals/Query/Indexes.html#M000141","(tokens, index)","",2],["allocations_ary_for","Internals::Query::Indexes","classes/Internals/Query/Indexes.html#M000140","(tokens)","",2],["allocations_for","Internals::Query::Indexes","classes/Internals/Query/Indexes.html#M000139","(tokens)","Returns a number of possible allocations for the given tokens. ",2],["app_for","Internals::Adapters::Rack","classes/Internals/Adapters/Rack.html#M000057","(thing, options = {})","",2],["backup","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000076","()","Copies the indexes to the \"backup\" directory. ",2],["backup","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000082","()","Will copy the index file to a location that is in a directory named \"backup\" right under the directory",2],["backup","Internals::Index::Redis::Basic","classes/Internals/Index/Redis/Basic.html#M000109","()","Redis does not backup. ",2],["backup_directory","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000083","()","The backup directory of this file. Equal to the file's dirname plus /backup ",2],["backup_file_path_of","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000086","(path)","The backup filename. ",2],["boost","Search","classes/Search.html#M000170","(options)","TODO Doc. Spec. Example: Search.new(index1, index2, index3) do searching removes_characters: /[^a-z]/,",2],["cache_ok?","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000089","()","Is the cache ok? (existing and larger than zero Bytes in size) A small cache is still ok. ",2],["cache_ok?","Internals::Index::Redis::Basic","classes/Internals/Index/Redis/Basic.html#M000112","()","Is the cache ok? A small cache is still ok. ",2],["cache_small?","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000088","()","Is this cache file suspiciously small? (less than 8 Bytes of size) ",2],["cache_small?","Internals::Index::Redis::Basic","classes/Internals/Index/Redis/Basic.html#M000111","()","Is this cache suspiciously small? ",2],["call","Application","classes/Application.html#M000002","(env)","A Picky application implements the Rack interface. Delegates to its routing to handle a request. ",2],["call","Rack::Harakiri","classes/Rack/Harakiri.html#M000153","(env)","#call interface method. Harakiri is a middleware, so it delegates the the app or the next middleware",2],["category","Index::Base","classes/Index/Base.html#M000025","(category_name, options = {})","Defines a searchable category on the index. === Parameters * category_name: This identifier is used in",2],["category_name","Internals::Shared::Category","classes/Internals/Shared/Category.html#M000144","()","",2],["check_external_interface","Application","classes/Application.html#M000009","()","",2],["check_name","Index::Base","classes/Index/Base.html#M000016","(name)","Since this is an API, we fail hard quickly. ",2],["check_options","Index::Base","classes/Index/Base.html#M000017","(options)","",2],["check_source","Index::Base","classes/Index/Base.html#M000018","(source)","",2],["chunksize","Sources::DB","classes/Sources/DB.html#M000211","()","The amount of records that are loaded each chunk. ",2],["close_child","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000040","()","Close the child if it isn't yet closed. ",2],["collection","Internals::Index::Redis::ListHash","classes/Internals/Index/Redis/ListHash.html#M000115","(sym)","Get a collection. ",2],["collection","Internals::Index::Redis::StringHash","classes/Internals/Index/Redis/StringHash.html#M000118","(sym)","Get a collection. ",2],["combinations_type_for","Search","classes/Search.html#M000171","(index_definitions_ary)","",2],["connect_backend","Sources::Base","classes/Sources/Base.html#M000181","()","Connect to the backend. Called once per index/category combination before harvesting. Examples: * The",2],["connect_backend","Sources::DB","classes/Sources/DB.html#M000198","()","Connect the backend. Will raise unless connection options have been given. ",2],["count","Sources::DB","classes/Sources/DB.html#M000200","(index)","Counts all the entries that are used for the index. ",2],["define_category","Index::Base","classes/Index/Base.html#M000026","(category_name, options = {})","Alias for #category",2],["define_indexing","Index::Base","classes/Index/Base.html#M000021","(options = {})","Alias for #indexing",2],["define_ranged_category","Index::Base","classes/Index/Base.html#M000028","(category_name, range, options = {})","Alias for #ranged_category",2],["define_source","Index::Base","classes/Index/Base.html#M000023","(source)","Alias for #source",2],["delete","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000078","()","Delete all index files. ",2],["delete","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000087","()","Deletes the file. ",2],["delete","Internals::Index::Redis::Basic","classes/Internals/Index/Redis/Basic.html#M000110","()","Deletes the Redis index namespace. ",2],["dump","Internals::Index::File::JSON","classes/Internals/Index/File/JSON.html#M000093","(hash)","Dumps the index hash in json format. ",2],["dump","Internals::Index::File::Marshal","classes/Internals/Index/File/Marshal.html#M000097","(hash)","Dumps the index hash in marshal format. ",2],["dump","Internals::Index::File::Text","classes/Internals/Index/File/Text.html#M000101","(hash)","Text files are used exclusively for prepared data files. ",2],["dump","Internals::Index::Redis::ListHash","classes/Internals/Index/Redis/ListHash.html#M000114","(hash)","Writes the hash into Redis. ",2],["dump","Internals::Index::Redis::StringHash","classes/Internals/Index/Redis/StringHash.html#M000117","(hash)","Writes the hash into Redis. Note: We could use multi, but it did not help. ",2],["dump_configuration","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000065","(configuration_hash)","",2],["dump_index","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000062","(index_hash)","Dumping. ",2],["dump_similarity","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000064","(similarity_hash)","",2],["dump_weights","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000063","(weights_hash)","",2],["duration","Results","classes/Results.html#M000162","()","Duration default is 0. ",2],["execute","Search","classes/Search.html#M000177","(tokens, ids, offset)","Execute a search using Query::Tokens. Note: Internal method, use #search_with_text. ",2],["expand_combinations_from","Internals::Query::Indexes","classes/Internals/Query/Indexes.html#M000142","(possible_combinations)","This is the core of the search engine. No kidding. Gets an array of [ [<combinations for token1>], [<combinations",2],["extension","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000081","()","The default extension for index files is \"index\". ",2],["extension","Internals::Index::File::JSON","classes/Internals/Index/File/JSON.html#M000091","()","Uses the extension \"json\". ",2],["extension","Internals::Index::File::Marshal","classes/Internals/Index/File/Marshal.html#M000095","()","Uses the extension \"dump\". ",2],["extension","Internals::Index::File::Text","classes/Internals/Index/File/Text.html#M000099","()","Uses the extension \"txt\". ",2],["extract_configuration","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000044","()","",2],["extracted","Internals::Adapters::Rack::Query","classes/Internals/Adapters/Rack/Query.html#M000056","(params)","",2],["flush","Indexers::Parallel","classes/Indexers/Parallel.html#M000128","(combined)","",2],["from","Results","classes/Results.html#M000157","(amount, offset, allocations)","Create new results and calculate the ids. ",2],["harakiri","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000038","()","Kills itself, but still answering the request honorably. ",2],["harakiri","Rack::Harakiri","classes/Rack/Harakiri.html#M000154","()","Checks to see if it is time to honorably retire. If yes, kills itself (Unicorn will answer the request,",2],["harakiri?","Rack::Harakiri","classes/Rack/Harakiri.html#M000155","()","Is it time to honorably retire? ",2],["harvest","Sources::CSV","classes/Sources/CSV.html#M000192","(category)","Harvests the data to index. ",2],["harvest","Sources::Couch","classes/Sources/Couch.html#M000186","(category)","",2],["harvest","Sources::DB","classes/Sources/DB.html#M000202","(category, &block)","Harvests the data to index in chunks. ",2],["harvest","Sources::Delicious","classes/Sources/Delicious.html#M000208","(category)","Harvests the data to index. ",2],["harvest_statement","Sources::DB","classes/Sources/DB.html#M000210","(category)","The harvest statement used to pull data from the snapshot table. ",2],["harvest_statement_with_offset","Sources::DB","classes/Sources/DB.html#M000204","(category, offset)","Builds a harvest statement for getting data to index. ",2],["hashed","Indexers::Solr","classes/Indexers/Solr.html#M000136","(values)","",2],["identifier","Internals::Shared::Category","classes/Internals/Shared/Category.html#M000148","()","Identifier for internal use. ",2],["ids","Internals::Index::Redis","classes/Internals/Index/Redis.html#M000121","(sym)","Delegate to the right collection. ",2],["ids","Results","classes/Results.html#M000164","(amount = 20)","Delegates to allocations. ",2],["index","Indexers::Base","classes/Indexers/Base.html#M000124","()","Selects the original id (indexed id) and a column to process. The column data is called \"token\". Note:",2],["index","Indexers::Solr","classes/Indexers/Solr.html#M000135","()","",2],["index_cache_ok?","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000070","()","Cache ok? ",2],["index_cache_small?","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000073","()","Cache small? ",2],["index_directory","Internals::Shared::Category","classes/Internals/Shared/Category.html#M000150","()","The index directory for this category. ",2],["index_name","Internals::Shared::Category","classes/Internals/Shared/Category.html#M000143","()","",2],["index_path","Internals::Shared::Category","classes/Internals/Shared/Category.html#M000145","(bundle_name, type)","Path and partial filename of a specific index on this category. ",2],["indexing","Application","classes/Application.html#M000000","(options = {})","Returns a configured tokenizer that is used for indexing by default. ",2],["indexing","Index::Base","classes/Index/Base.html#M000020","(options = {})","Define an index tokenizer on the index. Parameters are the exact same as for indexing. ",2],["indexing_message","Indexers::Parallel","classes/Indexers/Parallel.html#M000129","()","",2],["indexing_message","Indexers::Serial","classes/Indexers/Serial.html#M000133","()","",2],["internal_indexed","Index::Base","classes/Index/Base.html#M000015","()","",2],["internal_indexing","Index::Base","classes/Index/Base.html#M000014","()","",2],["key_format","Indexers::Base","classes/Indexers/Base.html#M000125","()","Delegates the key format to the source. Default is to_i. ",2],["kill_each_worker_except","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000034","(pid)","Taken from Unicorn. ",2],["kill_worker","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000035","(signal, wpid)","",2],["load","Internals::Index::File::JSON","classes/Internals/Index/File/JSON.html#M000092","()","Loads the index hash from json format. ",2],["load","Internals::Index::File::Marshal","classes/Internals/Index/File/Marshal.html#M000096","()","Loads the index hash from marshal format. ",2],["load","Internals::Index::File::Text","classes/Internals/Index/File/Text.html#M000100","()","Text files are used exclusively for prepared data files. ",2],["load","Internals::Index::Redis::Basic","classes/Internals/Index/Redis/Basic.html#M000107","()","Does nothing. ",2],["load_configuration","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000069","()","",2],["load_index","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000066","()","Loading. ",2],["load_similarity","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000067","()","",2],["load_weights","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000068","()","",2],["log_type","Results","classes/Results.html#M000166","()","The first character in the blog designates what type of query it is. No calculated ids means: No results.",2],["member","Internals::Index::Redis::ListHash","classes/Internals/Index/Redis/ListHash.html#M000116","(sym)","Get a single value. ",2],["member","Internals::Index::Redis::StringHash","classes/Internals/Index/Redis/StringHash.html#M000119","(sym)","Get a single value. ",2],["new","Index::Base","classes/Index/Base.html#M000013","(name, options = {})","Create a new index with a given source. === Parameters * name: A name that will be used for the index",2],["new","Index::Memory","classes/Index/Memory.html#M000024","(name, options = {})","Create a new memory index for indexing and for querying. Parameters: * name: The identifier of the index.",2],["new","Index::Redis","classes/Index/Redis.html#M000030","(name, options = {})","Create a new Redis index for indexing and for querying. Parameters: * name: The identifier of the index.",2],["new","Indexers::Parallel","classes/Indexers/Parallel.html#M000126","(index)","",2],["new","Indexers::Serial","classes/Indexers/Serial.html#M000130","(category)","",2],["new","Indexers::Solr","classes/Indexers/Solr.html#M000134","(type)","Takes a Configuration::Type. ",2],["new","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000031","()","",2],["new","Interfaces::LiveParameters::CouldNotUpdateConfigurationError","classes/Interfaces/LiveParameters/CouldNotUpdateConfigurationError.html#M000042","(config_key, message)","",2],["new","Internals::Adapters::Rack::LiveParameters","classes/Internals/Adapters/Rack/LiveParameters.html#M000052","(live_parameters)","",2],["new","Internals::Adapters::Rack::Query","classes/Internals/Adapters/Rack/Query.html#M000054","(query)","",2],["new","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000060","(bundle_name, category)","",2],["new","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000079","(cache_path)","An index cache takes a path, without file extension, which will be provided by the subclasses. ",2],["new","Internals::Index::Files","classes/Internals/Index/Files.html#M000104","(bundle_name, category)","",2],["new","Internals::Index::Redis","classes/Internals/Index/Redis.html#M000120","(bundle_name, category)","",2],["new","Internals::Index::Redis::Basic","classes/Internals/Index/Redis/Basic.html#M000106","(namespace)","An index cache takes a path, without file extension, which will be provided by the subclasses. ",2],["new","Internals::Query::Indexes","classes/Internals/Query/Indexes.html#M000137","(*index_definitions, combinations_type)","Creates a new Query::Indexes. Its job is to generate all possible combinations. Note: We cannot mix memory",2],["new","Rack::Harakiri","classes/Rack/Harakiri.html#M000152","(app)","",2],["new","Results","classes/Results.html#M000156","(amount = 0, offset = 0, allocations = Internals::Query::Allocations.new)","Takes instances of Query::Allocations as param. ",2],["new","Search","classes/Search.html#M000167","(*index_definitions)","Takes: * A number of indexes * Options hash (optional) with: * tokenizer: Tokenizers::Query.default by",2],["new","Search::DifferentTypesError","classes/Search/DifferentTypesError.html#M000172","(types)","",2],["new","Sources::CSV","classes/Sources/CSV.html#M000189","(*category_names, options)","",2],["new","Sources::Couch","classes/Sources/Couch.html#M000183","(*category_names, options)","",2],["new","Sources::DB","classes/Sources/DB.html#M000194","(select_statement, options = { file: 'app/db.yml' })","",2],["new","Sources::Delicious","classes/Sources/Delicious.html#M000205","(username, password)","",2],["open_for_indexing","Internals::Index::File::Text","classes/Internals/Index/File/Text.html#M000103","(&block)","",2],["parameters","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000037","(configuration_hash)","Updates any parameters with the ones given and returns the updated params. The params are a strictly",2],["prepare!","Results","classes/Results.html#M000161","()","This starts the actual processing. Without this, the allocations are not processed, and no ids are calculated.",2],["prepare_backup","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000084","(target)","Prepares the backup directory for the file. ",2],["prepare_index_directory","Internals::Shared::Category","classes/Internals/Shared/Category.html#M000151","()","Creates the index directory including all necessary paths above it. ",2],["prepared_allocations_for","Internals::Query::Indexes","classes/Internals/Query/Indexes.html#M000138","(tokens, weights = {})","Returns a number of prepared (sorted, reduced etc.) allocations for the given tokens. ",2],["prepared_index_file","Internals::Shared::Category","classes/Internals/Shared/Category.html#M000147","(&block)","",2],["prepared_index_path","Internals::Shared::Category","classes/Internals/Shared/Category.html#M000146","()","",2],["process","Indexers::Parallel","classes/Indexers/Parallel.html#M000127","()","",2],["process","Indexers::Serial","classes/Indexers/Serial.html#M000132","()","Harvest the data from the source, tokenize, and write to an intermediate \"prepared index\" file. ",2],["querying_removes_characters","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000045","()","TODO Move to Interface object. ",2],["querying_removes_characters=","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000046","(new_value)","",2],["querying_splits_text_on","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000049","()","",2],["querying_splits_text_on=","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000050","(new_value)","",2],["querying_stopwords","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000047","()","",2],["querying_stopwords=","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000048","(new_value)","",2],["raise_different","Search","classes/Search.html#M000174","(index_types)","",2],["ranged_category","Index::Base","classes/Index/Base.html#M000027","(category_name, range, options = {})","Make this category range searchable with a fixed range. If you need other ranges, define another category",2],["remove_worker","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000036","(wpid)","TODO This needs to be Webserver agnostic. ",2],["respond_with","Internals::Adapters::Rack::Base","classes/Internals/Adapters/Rack/Base.html#M000041","(response, content_type = 'application/json')","Puts together an appropriately structured Rack response. Note: Bytesize is needed to have special characters",2],["restore","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000077","()","Restores the indexes from the \"backup\" directory. ",2],["restore","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000085","()","Copies the file from its backup location back to the original location. ",2],["retrieve","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000061","(&block)","Retrieving data. ",2],["retrieve","Internals::Index::File::JSON","classes/Internals/Index/File/JSON.html#M000094","()","A json file does not provide retrieve functionality. ",2],["retrieve","Internals::Index::File::Marshal","classes/Internals/Index/File/Marshal.html#M000098","()","A marshal file does not provide retrieve functionality. ",2],["retrieve","Internals::Index::File::Text","classes/Internals/Index/File/Text.html#M000102","()","Retrieves prepared index data in the form * id,data\\n * id,data\\n * id,data\\n Yields an id string and",2],["retrieve","Internals::Index::Redis::Basic","classes/Internals/Index/Redis/Basic.html#M000108","()","We do not use Redis to retrieve data. ",2],["search","Search","classes/Search.html#M000176","(tokens, ids = 20, offset = 0)","Runs the actual search using Query::Tokens. Note: Internal method, use #search_with_text. ",2],["search_with_text","Search","classes/Search.html#M000175","(text, ids = 20, offset = 0)","This is the main entry point for a query. Use this in specs and also for running queries. Parameters:",2],["searching","Application","classes/Application.html#M000001","(options = {})","Returns a configured tokenizer that is used for querying by default. ",2],["searching","Search","classes/Search.html#M000168","(options)","TODO Doc. Spec. Example: Search.new(index1, index2, index3) do searching removes_characters: /[^a-z]/,",2],["serialize","Results","classes/Results.html#M000158","()","Returns a hash with the allocations, offset, duration and total. ",2],["setting","Internals::Index::Redis","classes/Internals/Index/Redis.html#M000123","(sym)","Delegate to a member value. ",2],["similarity_cache_ok?","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000071","()","",2],["similarity_cache_small?","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000074","()","",2],["size","Internals::Index::Redis::Basic","classes/Internals/Index/Redis/Basic.html#M000113","()","Extracts the size of the file in Bytes. Note: This is a very forgiving implementation. But as long as",2],["size_of","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000090","(path)","Extracts the size of the file in Bytes. ",2],["snapshot_table_name","Sources::DB","classes/Sources/DB.html#M000201","(index)","The name of the snapshot table created by Picky. ",2],["source","Index::Base","classes/Index/Base.html#M000022","(source)","Define a source on the index. Parameter is a source, either one of the standard sources or anything responding",2],["start_master_process_thread","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000032","()","This runs a thread that listens to child processes. ",2],["take_snapshot","Sources::Base","classes/Sources/Base.html#M000182","(index)","Used to take a snapshot of your data if it is fast changing. Called once for each type before harvesting.",2],["take_snapshot","Sources::DB","classes/Sources/DB.html#M000199","(index)","Take a snapshot of the data. Uses CREATE TABLE AS with the given SELECT statement to create a snapshot",2],["timed","Helpers::Measuring","classes/Helpers/Measuring.html#M000059","(*args, &block)","Returns a duration in seconds. ",2],["to_app","Internals::Adapters::Rack::LiveParameters","classes/Internals/Adapters/Rack/LiveParameters.html#M000053","(options = {})","",2],["to_app","Internals::Adapters::Rack::Query","classes/Internals/Adapters/Rack/Query.html#M000055","(options = {})","",2],["to_json","Results","classes/Results.html#M000160","(options = {})","Convert to json format. ",2],["to_log","Results","classes/Results.html#M000165","(query)","Human readable log. ",2],["to_response","Results","classes/Results.html#M000159","(options = {})","The default format is json. ",2],["to_routes","Application","classes/Application.html#M000012","()","",2],["to_s","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000051","()","",2],["to_s","Internals::Index::File::Basic","classes/Internals/Index/File/Basic.html#M000080","()","",2],["to_s","Internals::Index::Files","classes/Internals/Index/Files.html#M000105","()","",2],["to_s","Internals::Shared::Category","classes/Internals/Shared/Category.html#M000149","()","",2],["to_s","Search","classes/Search.html#M000180","()","Display some nice information for the user. ",2],["to_s","Search::DifferentTypesError","classes/Search/DifferentTypesError.html#M000173","()","",2],["to_s","Sources::CSV","classes/Sources/CSV.html#M000190","()","",2],["to_s","Sources::Couch","classes/Sources/Couch.html#M000184","()","",2],["to_s","Sources::DB","classes/Sources/DB.html#M000195","()","",2],["to_s","Sources::Delicious","classes/Sources/Delicious.html#M000207","()","",2],["to_stats","Application","classes/Application.html#M000011","()","",2],["to_stats","Index::Base","classes/Index/Base.html#M000019","()","",2],["tokenized","Search","classes/Search.html#M000178","(text)","Delegates the tokenizing to the query tokenizer. Parameters: * text: The text to tokenize. ",2],["tokenizer","Indexers::Serial","classes/Indexers/Serial.html#M000131","()","The tokenizer used is a cached tokenizer from the category. ",2],["tokenizer","Search","classes/Search.html#M000169","()","",2],["total","Results","classes/Results.html#M000163","()","The total results. Delegates to the allocations. Caches. ",2],["try_updating_configuration_with","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000043","(configuration_hash)","Tries updating the configuration in the child process or parent process. ",2],["weight","Internals::Index::Redis","classes/Internals/Index/Redis.html#M000122","(sym)","Delegate to the right member value. Note: Converts to float. ",2],["weights_cache_ok?","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000072","()","",2],["weights_cache_small?","Internals::Index::Backend","classes/Internals/Index/Backend.html#M000075","()","",2],["worker_pids","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000033","()","TODO This needs to be webserver agnostic. ",2],["write_parent","Interfaces::LiveParameters","classes/Interfaces/LiveParameters.html#M000039","(configuration_hash)","Write the parent. Note: The ;;; is the end marker for the message. ",2],["bundling.rb","files/lib/bundling_rb.html","files/lib/bundling_rb.html","","",3],["constants.rb","files/lib/constants_rb.html","files/lib/constants_rb.html","","Set constants. ",3],["deployment.rb","files/lib/deployment_rb.html","files/lib/deployment_rb.html","","",3],["picky-tasks.rb","files/lib/picky-tasks_rb.html","files/lib/picky-tasks_rb.html","","",3],["picky.rb","files/lib/picky_rb.html","files/lib/picky_rb.html","","Require the constants. ",3],["aliases.rb","files/lib/picky/aliases_rb.html","files/lib/picky/aliases_rb.html","","This provides a nice accessor for users who want to use the index API. ",3],["analyzer.rb","files/lib/picky/analyzer_rb.html","files/lib/picky/analyzer_rb.html","","encoding: utf-8 ",3],["application.rb","files/lib/picky/application_rb.html","files/lib/picky/application_rb.html","","= Picky Applications A Picky Application is where you configure the whole search engine. This is a step-by-step",3],["west_european.rb","files/lib/picky/character_substituters/west_european_rb.html","files/lib/picky/character_substituters/west_european_rb.html","","encoding: utf-8 ",3],["cores.rb","files/lib/picky/cores_rb.html","files/lib/picky/cores_rb.html","","",3],["aliases.rb","files/lib/picky/generators/aliases_rb.html","files/lib/picky/generators/aliases_rb.html","","",3],["base.rb","files/lib/picky/index/base_rb.html","files/lib/picky/index/base_rb.html","","",3],["memory.rb","files/lib/picky/index/memory_rb.html","files/lib/picky/index/memory_rb.html","","",3],["redis.rb","files/lib/picky/index/redis_rb.html","files/lib/picky/index/redis_rb.html","","",3],["index_bundle.rb","files/lib/picky/index_bundle_rb.html","files/lib/picky/index_bundle_rb.html","","Comfortable API convenience class, splits methods to indexes. ",3],["indexes.rb","files/lib/picky/indexed/indexes_rb.html","files/lib/picky/indexed/indexes_rb.html","","",3],["indexes.rb","files/lib/picky/indexing/indexes_rb.html","files/lib/picky/indexing/indexes_rb.html","","",3],["live_parameters.rb","files/lib/picky/interfaces/live_parameters_rb.html","files/lib/picky/interfaces/live_parameters_rb.html","","This is very optional. Only load if the user wants it. ",3],["internals.rb","files/lib/picky/internals_rb.html","files/lib/picky/internals_rb.html","","",3],["rack.rb","files/lib/picky/internals/adapters/rack_rb.html","files/lib/picky/internals/adapters/rack_rb.html","","",3],["base.rb","files/lib/picky/internals/adapters/rack/base_rb.html","files/lib/picky/internals/adapters/rack/base_rb.html","","",3],["live_parameters.rb","files/lib/picky/internals/adapters/rack/live_parameters_rb.html","files/lib/picky/internals/adapters/rack/live_parameters_rb.html","","",3],["query.rb","files/lib/picky/internals/adapters/rack/query_rb.html","files/lib/picky/internals/adapters/rack/query_rb.html","","",3],["location.rb","files/lib/picky/internals/calculations/location_rb.html","files/lib/picky/internals/calculations/location_rb.html","","",3],["maybe_compile.rb","files/lib/picky/internals/ext/maybe_compile_rb.html","files/lib/picky/internals/ext/maybe_compile_rb.html","","",3],["Makefile","files/lib/picky/internals/ext/ruby19/Makefile.html","files/lib/picky/internals/ext/ruby19/Makefile.html",""," SHELL = /bin/sh  #### Start of system configuration section. ####  srcdir = . topdir = /Users/admin/.rvm/rubies/ruby-1.9.2-p136/include/ruby-1.9.1",3],["extconf.rb","files/lib/picky/internals/ext/ruby19/extconf_rb.html","files/lib/picky/internals/ext/ruby19/extconf_rb.html","","",3],["mkmf.log","files/lib/picky/internals/ext/ruby19/mkmf_log.html","files/lib/picky/internals/ext/ruby19/mkmf_log.html","","have_header: checking for ruby.h... -------------------- yes  \"gcc -o conftest -I/Users/admin/.rvm/rubies/ruby-1.9.2-p136/include/ruby-1.9.1/x86_64-darwin10.4.0",3],["performant.c","files/lib/picky/internals/ext/ruby19/performant_c.html","files/lib/picky/internals/ext/ruby19/performant_c.html","","",3],["array.rb","files/lib/picky/internals/extensions/array_rb.html","files/lib/picky/internals/extensions/array_rb.html","","The Array class we all know and love. ",3],["hash.rb","files/lib/picky/internals/extensions/hash_rb.html","files/lib/picky/internals/extensions/hash_rb.html","","Extensions for the Hash. ",3],["module.rb","files/lib/picky/internals/extensions/module_rb.html","files/lib/picky/internals/extensions/module_rb.html","","The original Module class. ",3],["object.rb","files/lib/picky/internals/extensions/object_rb.html","files/lib/picky/internals/extensions/object_rb.html","","",3],["symbol.rb","files/lib/picky/internals/extensions/symbol_rb.html","files/lib/picky/internals/extensions/symbol_rb.html","","Extending the Symbol class. ",3],["rack.rb","files/lib/picky/internals/frontend_adapters/rack_rb.html","files/lib/picky/internals/frontend_adapters/rack_rb.html","","",3],["base.rb","files/lib/picky/internals/generators/base_rb.html","files/lib/picky/internals/generators/base_rb.html","","",3],["default.rb","files/lib/picky/internals/generators/partial/default_rb.html","files/lib/picky/internals/generators/partial/default_rb.html","","",3],["none.rb","files/lib/picky/internals/generators/partial/none_rb.html","files/lib/picky/internals/generators/partial/none_rb.html","","",3],["strategy.rb","files/lib/picky/internals/generators/partial/strategy_rb.html","files/lib/picky/internals/generators/partial/strategy_rb.html","","",3],["substring.rb","files/lib/picky/internals/generators/partial/substring_rb.html","files/lib/picky/internals/generators/partial/substring_rb.html","","",3],["partial_generator.rb","files/lib/picky/internals/generators/partial_generator_rb.html","files/lib/picky/internals/generators/partial_generator_rb.html","","",3],["default.rb","files/lib/picky/internals/generators/similarity/default_rb.html","files/lib/picky/internals/generators/similarity/default_rb.html","","",3],["double_metaphone.rb","files/lib/picky/internals/generators/similarity/double_metaphone_rb.html","files/lib/picky/internals/generators/similarity/double_metaphone_rb.html","","encoding: utf-8 --- encoding: utf-8 --- encoding: utf-8 --- encoding: utf-8 --- encoding: utf-8 --- encoding:",3],["metaphone.rb","files/lib/picky/internals/generators/similarity/metaphone_rb.html","files/lib/picky/internals/generators/similarity/metaphone_rb.html","","encoding: utf-8 ",3],["none.rb","files/lib/picky/internals/generators/similarity/none_rb.html","files/lib/picky/internals/generators/similarity/none_rb.html","","",3],["phonetic.rb","files/lib/picky/internals/generators/similarity/phonetic_rb.html","files/lib/picky/internals/generators/similarity/phonetic_rb.html","","encoding: utf-8 ",3],["soundex.rb","files/lib/picky/internals/generators/similarity/soundex_rb.html","files/lib/picky/internals/generators/similarity/soundex_rb.html","","encoding: utf-8 ",3],["strategy.rb","files/lib/picky/internals/generators/similarity/strategy_rb.html","files/lib/picky/internals/generators/similarity/strategy_rb.html","","",3],["similarity_generator.rb","files/lib/picky/internals/generators/similarity_generator_rb.html","files/lib/picky/internals/generators/similarity_generator_rb.html","","",3],["strategy.rb","files/lib/picky/internals/generators/strategy_rb.html","files/lib/picky/internals/generators/strategy_rb.html","","",3],["default.rb","files/lib/picky/internals/generators/weights/default_rb.html","files/lib/picky/internals/generators/weights/default_rb.html","","",3],["logarithmic.rb","files/lib/picky/internals/generators/weights/logarithmic_rb.html","files/lib/picky/internals/generators/weights/logarithmic_rb.html","","",3],["strategy.rb","files/lib/picky/internals/generators/weights/strategy_rb.html","files/lib/picky/internals/generators/weights/strategy_rb.html","","",3],["weights_generator.rb","files/lib/picky/internals/generators/weights_generator_rb.html","files/lib/picky/internals/generators/weights_generator_rb.html","","",3],["measuring.rb","files/lib/picky/internals/helpers/measuring_rb.html","files/lib/picky/internals/helpers/measuring_rb.html","","Helper methods for measuring, benchmarking, logging. ",3],["backend.rb","files/lib/picky/internals/index/backend_rb.html","files/lib/picky/internals/index/backend_rb.html","","",3],["basic.rb","files/lib/picky/internals/index/file/basic_rb.html","files/lib/picky/internals/index/file/basic_rb.html","","",3],["json.rb","files/lib/picky/internals/index/file/json_rb.html","files/lib/picky/internals/index/file/json_rb.html","","",3],["marshal.rb","files/lib/picky/internals/index/file/marshal_rb.html","files/lib/picky/internals/index/file/marshal_rb.html","","",3],["text.rb","files/lib/picky/internals/index/file/text_rb.html","files/lib/picky/internals/index/file/text_rb.html","","",3],["files.rb","files/lib/picky/internals/index/files_rb.html","files/lib/picky/internals/index/files_rb.html","","",3],["redis.rb","files/lib/picky/internals/index/redis_rb.html","files/lib/picky/internals/index/redis_rb.html","","",3],["basic.rb","files/lib/picky/internals/index/redis/basic_rb.html","files/lib/picky/internals/index/redis/basic_rb.html","","",3],["list_hash.rb","files/lib/picky/internals/index/redis/list_hash_rb.html","files/lib/picky/internals/index/redis/list_hash_rb.html","","",3],["string_hash.rb","files/lib/picky/internals/index/redis/string_hash_rb.html","files/lib/picky/internals/index/redis/string_hash_rb.html","","",3],["base.rb","files/lib/picky/internals/indexed/bundle/base_rb.html","files/lib/picky/internals/indexed/bundle/base_rb.html","","",3],["memory.rb","files/lib/picky/internals/indexed/bundle/memory_rb.html","files/lib/picky/internals/indexed/bundle/memory_rb.html","","",3],["redis.rb","files/lib/picky/internals/indexed/bundle/redis_rb.html","files/lib/picky/internals/indexed/bundle/redis_rb.html","","",3],["categories.rb","files/lib/picky/internals/indexed/categories_rb.html","files/lib/picky/internals/indexed/categories_rb.html","","",3],["category.rb","files/lib/picky/internals/indexed/category_rb.html","files/lib/picky/internals/indexed/category_rb.html","","",3],["index.rb","files/lib/picky/internals/indexed/index_rb.html","files/lib/picky/internals/indexed/index_rb.html","","",3],["calculation.rb","files/lib/picky/internals/indexed/wrappers/bundle/calculation_rb.html","files/lib/picky/internals/indexed/wrappers/bundle/calculation_rb.html","","",3],["location.rb","files/lib/picky/internals/indexed/wrappers/bundle/location_rb.html","files/lib/picky/internals/indexed/wrappers/bundle/location_rb.html","","",3],["wrapper.rb","files/lib/picky/internals/indexed/wrappers/bundle/wrapper_rb.html","files/lib/picky/internals/indexed/wrappers/bundle/wrapper_rb.html","","",3],["location.rb","files/lib/picky/internals/indexed/wrappers/category/location_rb.html","files/lib/picky/internals/indexed/wrappers/category/location_rb.html","","",3],["exact_first.rb","files/lib/picky/internals/indexed/wrappers/exact_first_rb.html","files/lib/picky/internals/indexed/wrappers/exact_first_rb.html","","",3],["base.rb","files/lib/picky/internals/indexers/base_rb.html","files/lib/picky/internals/indexers/base_rb.html","","encoding: utf-8 --- encoding: utf-8 --- encoding: utf-8 ",3],["parallel.rb","files/lib/picky/internals/indexers/parallel_rb.html","files/lib/picky/internals/indexers/parallel_rb.html","","encoding: utf-8 ",3],["serial.rb","files/lib/picky/internals/indexers/serial_rb.html","files/lib/picky/internals/indexers/serial_rb.html","","encoding: utf-8 ",3],["solr.rb","files/lib/picky/internals/indexers/solr_rb.html","files/lib/picky/internals/indexers/solr_rb.html","","encoding: utf-8 ",3],["base.rb","files/lib/picky/internals/indexing/bundle/base_rb.html","files/lib/picky/internals/indexing/bundle/base_rb.html","","encoding: utf-8 ",3],["memory.rb","files/lib/picky/internals/indexing/bundle/memory_rb.html","files/lib/picky/internals/indexing/bundle/memory_rb.html","","encoding: utf-8 ",3],["redis.rb","files/lib/picky/internals/indexing/bundle/redis_rb.html","files/lib/picky/internals/indexing/bundle/redis_rb.html","","encoding: utf-8 ",3],["super_base.rb","files/lib/picky/internals/indexing/bundle/super_base_rb.html","files/lib/picky/internals/indexing/bundle/super_base_rb.html","","",3],["category.rb","files/lib/picky/internals/indexing/category_rb.html","files/lib/picky/internals/indexing/category_rb.html","","",3],["index.rb","files/lib/picky/internals/indexing/index_rb.html","files/lib/picky/internals/indexing/index_rb.html","","TODO Move to the API. ",3],["location.rb","files/lib/picky/internals/indexing/wrappers/category/location_rb.html","files/lib/picky/internals/indexing/wrappers/category/location_rb.html","","",3],["performant.rb","files/lib/picky/internals/performant_rb.html","files/lib/picky/internals/performant_rb.html","","",3],["allocation.rb","files/lib/picky/internals/query/allocation_rb.html","files/lib/picky/internals/query/allocation_rb.html","","",3],["allocations.rb","files/lib/picky/internals/query/allocations_rb.html","files/lib/picky/internals/query/allocations_rb.html","","",3],["combination.rb","files/lib/picky/internals/query/combination_rb.html","files/lib/picky/internals/query/combination_rb.html","","",3],["base.rb","files/lib/picky/internals/query/combinations/base_rb.html","files/lib/picky/internals/query/combinations/base_rb.html","","",3],["memory.rb","files/lib/picky/internals/query/combinations/memory_rb.html","files/lib/picky/internals/query/combinations/memory_rb.html","","",3],["redis.rb","files/lib/picky/internals/query/combinations/redis_rb.html","files/lib/picky/internals/query/combinations/redis_rb.html","","",3],["indexes.rb","files/lib/picky/internals/query/indexes_rb.html","files/lib/picky/internals/query/indexes_rb.html","","",3],["qualifiers.rb","files/lib/picky/internals/query/qualifiers_rb.html","files/lib/picky/internals/query/qualifiers_rb.html","","coding: utf-8 ",3],["token.rb","files/lib/picky/internals/query/token_rb.html","files/lib/picky/internals/query/token_rb.html","","",3],["tokens.rb","files/lib/picky/internals/query/tokens_rb.html","files/lib/picky/internals/query/tokens_rb.html","","encoding: utf-8 ",3],["weights.rb","files/lib/picky/internals/query/weights_rb.html","files/lib/picky/internals/query/weights_rb.html","","",3],["category.rb","files/lib/picky/internals/shared/category_rb.html","files/lib/picky/internals/shared/category_rb.html","","",3],["sunspot-solr.pid","files/lib/picky/internals/solr/pids/sunspot-solr_pid.html","files/lib/picky/internals/solr/pids/sunspot-solr_pid.html","","26985",3],["schema_generator.rb","files/lib/picky/internals/solr/schema_generator_rb.html","files/lib/picky/internals/solr/schema_generator_rb.html","","",3],["base.rb","files/lib/picky/internals/tokenizers/base_rb.html","files/lib/picky/internals/tokenizers/base_rb.html","","",3],["index.rb","files/lib/picky/internals/tokenizers/index_rb.html","files/lib/picky/internals/tokenizers/index_rb.html","","",3],["location.rb","files/lib/picky/internals/tokenizers/location_rb.html","files/lib/picky/internals/tokenizers/location_rb.html","","",3],["query.rb","files/lib/picky/internals/tokenizers/query_rb.html","files/lib/picky/internals/tokenizers/query_rb.html","","encoding: utf-8 ",3],["loader.rb","files/lib/picky/loader_rb.html","files/lib/picky/loader_rb.html","","Loads the search engine and itself. ",3],["search.rb","files/lib/picky/loggers/search_rb.html","files/lib/picky/loggers/search_rb.html","","encoding: utf-8 ",3],["no_source_specified_exception.rb","files/lib/picky/no_source_specified_exception_rb.html","files/lib/picky/no_source_specified_exception_rb.html","","Raised if no source is available on a category. ",3],["query.rb","files/lib/picky/query_rb.html","files/lib/picky/query_rb.html","","",3],["solr.rb","files/lib/picky/query/solr_rb.html","files/lib/picky/query/solr_rb.html","","",3],["harakiri.rb","files/lib/picky/rack/harakiri_rb.html","files/lib/picky/rack/harakiri_rb.html","","",3],["results.rb","files/lib/picky/results_rb.html","files/lib/picky/results_rb.html","","This is the internal results object. Usually, to_marshal, or to_json is called on it to get a string",3],["search.rb","files/lib/picky/search_rb.html","files/lib/picky/search_rb.html","","= Picky Queries A Picky Search is an object which: * holds one or more indexes * offers an interface",3],["signals.rb","files/lib/picky/signals_rb.html","files/lib/picky/signals_rb.html","","TODO Cleanup and move to project_prototype. Signal.trap 'USR1' do Indexes.reload end Signal.trap 'USR2'",3],["base.rb","files/lib/picky/sources/base_rb.html","files/lib/picky/sources/base_rb.html","","= Data Sources Currently, Picky offers the following Sources: * CSV (comma  or other  separated",3],["couch.rb","files/lib/picky/sources/couch_rb.html","files/lib/picky/sources/couch_rb.html","","",3],["csv.rb","files/lib/picky/sources/csv_rb.html","files/lib/picky/sources/csv_rb.html","","",3],["db.rb","files/lib/picky/sources/db_rb.html","files/lib/picky/sources/db_rb.html","","",3],["delicious.rb","files/lib/picky/sources/delicious_rb.html","files/lib/picky/sources/delicious_rb.html","","",3],["base.rb","files/lib/picky/sources/wrappers/base_rb.html","files/lib/picky/sources/wrappers/base_rb.html","","",3],["location.rb","files/lib/picky/sources/wrappers/location_rb.html","files/lib/picky/sources/wrappers/location_rb.html","","",3],["statistics.rb","files/lib/picky/statistics_rb.html","files/lib/picky/statistics_rb.html","","encoding: utf-8 ",3],["application.rake","files/lib/tasks/application_rake.html","files/lib/tasks/application_rake.html","","# desc \"Loads the application, including its configuration.\" # # Note: This is used by tasks to load",3],["checks.rake","files/lib/tasks/checks_rake.html","files/lib/tasks/checks_rake.html","","# Checks to help the user. # namespace :check do    desc 'Checks the index files for files that are suspiciously",3],["framework.rake","files/lib/tasks/framework_rake.html","files/lib/tasks/framework_rake.html","","# desc \"Loads the framework.\" # # Note: This is used by tasks to load the framework as a dependency.",3],["index.rake","files/lib/tasks/index_rake.html","files/lib/tasks/index_rake.html","","# Indexing tasks. # namespace :index do    desc \"Takes a snapshot, indexes, and caches in random order.\"",3],["routes.rake","files/lib/tasks/routes_rake.html","files/lib/tasks/routes_rake.html","","# Routing tasks. # desc \"Shows the available URL paths.\" task :routes => :application do   Application.apps.each",3],["search.rake","files/lib/tasks/search_rake.html","files/lib/tasks/search_rake.html","","# Tasks for testing your engine configuration in the terminal. # desc 'Simple terminal search - pass",3],["server.rake","files/lib/tasks/server_rake.html","files/lib/tasks/server_rake.html","","# Server tasks, like starting/stopping/restarting. # namespace :server do    # desc \"Start the unicorns.",3],["shortcuts.rake","files/lib/tasks/shortcuts_rake.html","files/lib/tasks/shortcuts_rake.html","","# Shortcut tasks. #  desc \"Generate the index (random order).\" task :index => :application do   Rake::Task[:'index:randomly'].invoke",3],["solr.rake","files/lib/tasks/solr_rake.html","files/lib/tasks/solr_rake.html","","# sunspot-solr start --solr-home=solr --data-directory=index/development/solr --pid-dir=solr/pids --log-file=log/solr.log",3],["spec.rake","files/lib/tasks/spec_rake.html","files/lib/tasks/spec_rake.html","","require 'spec' require 'spec/rake/spectask'  task :default => :spec  desc \"Run all specs\" Spec::Rake::SpecTask.new(:spec)",3],["statistics.rake","files/lib/tasks/statistics_rake.html","files/lib/tasks/statistics_rake.html","","# Statistics tasks. # namespace :stats do   task :prepare => :application do     require File.expand_path('../../picky/statistics',",3],["todo.rake","files/lib/tasks/todo_rake.html","files/lib/tasks/todo_rake.html","","desc \"Finds where Picky still needs input from you.\" task :\"to#{}do\" do   if system \"grep -e 'TODO.*'",3],["try.rake","files/lib/tasks/try_rake.html","files/lib/tasks/try_rake.html","","# Tasks for manually testing your engine configuration. # namespace :try do    # desc \"Try how a given",3]]}}